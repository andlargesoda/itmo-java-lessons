package lesson01;

public class Lesson01 {

    /* программа может быть исполняемой либо быть библиотекой,
    т.е. не выполняется и используется в других программах
     */
    // psvm + Enter
    // метод main - точка входа в исполняемую программу
    // метод используется в исполняемых программах, в библиотеках он не используется
    // класс состоит из методов, а метод из инструкций
    // в конце каждой инстукции ставится ";"

    public static void main(String[] args) {
        // sout + Enter
        // вывод данных в консоль
        System.out.println("Lesson01");

        // переменные
        // объявления переменных: тип_данных имяПеременной
        int size; // объявили переменную типа int с имененм size
        size = -2147483648; // "=" - не равно, а символ присваивания
        int count = 50;
        System.out.println(count);
        System.out.println(size);

        byte a = 127;
        long b = 32768;
        short c = 32767;
        System.out.println(a);
        System.out.println(b);
        System.out.println(c);

        int length = 200, width = 300;
        /* если переменные связаны логически,
        то их можно объединить в одну инструкцию
        */
        System.out.println(length);
        System.out.println(width);
        length=900_100_500;
        /* при записи чисел можно использовать _
        с целью удобсва чтения и в коде оно будет убираться
         */
        System.out.println(length);

        long bigData01 = 8001;
        long bigData02 = 800_000_000_000L;
        /*
        если значение переменной типа long выходит
        за предел допустимых значений переменной типа int,
        то в конце значения ставится L или l. Иначе будет ошибка.
        Принято ставить L, т.к. l похожа на 1.
         */

        double temp01 = 12.9;
        float temp02 = 12.9F;
        /*
        в конце значения переменной типа float
        ставится F или f вне зависимости от значения.
        float используется реже, чем double из-за
        оптимизации.
         */

        //System.out.println(bigData01 / 0);
        System.out.println(temp01/0); // infinity - не является ошибкой, но с ней нельзя работать
        /* если в программе есть инструкция с делением целого числа на 0,
        то возникнет ошибка в том месте, где происходит данное действие
        */
        // приведение типов
        // 1. автоматическое (int - long) к примитивам
        // 2. явное (отвечает разработчик) ссылочные

        int height01 = 1900;
        long height02 = height01;
        /* автоматическое привидение типов работает только
        при расширение диапазона испоьзумого типа переменной.
        Также переменные должны быть совместимы.
         */

        int smallValue01 = 10;
        byte smallValue02 = (byte) smallValue01;
        /*
        при явном приведении типов может возникнуть потеря данных
        нужно учитывать, чтобы значение при смене типа попадало в его диапазон значений
         */
        System.out.println(smallValue02);
        int e = 7;
        int f = 2;
        System.out.println(e % f);

        // арифмитическин операторы
        /* арифмитический оператор унарный, если учавствует одно чилсло -8
        бинарный, если учавствуют два числа 9-3
         */

        // целое число всегда является результатом деления двух целых чисел
        int i = 100, j = 13;
        int k = i / j;
        System.out.println(k); // отбрасывается дробная часть

        double n = (double) (i / j); // в первую очередь происходит операция деления
        double m1 = (double) i / j; // в первую очередь происходит операция приведения переменной i
        double m2 = (double) i / (double) j; // в первую очередь происходит операция приведения переменных i и j
        System.out.println(n);
        System.out.println(m1);
        System.out.println(m2);
        // результатом сложения или умножения типов byte или short будет int

    }
}
// сначала работает компилятор, который обращается в папку с исходным кодом и компилирует его в байт код
// затем работает интерпритатор, который и выполняет программу

