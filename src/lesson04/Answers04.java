package lesson04;

import java.util.Scanner;

public class Answers04 {
    public static void main(String[] args) {
        // Ответьте на следующие вопросы:
        // 1. Что означает инициализация переменной? присваивание переменной некоторого значения до первого использования этой переменной в программе
        // 2. Из каких символов может состоять имя переменной? имя переменной должно состоять из букв (Unicode), цифр и символа _
        // 3. Будет ли ошибкой использование кириллических символов в именах переменных? нет
        // 4. Какие примитивные типы есть в Java? byte, short, int, long, double, float, char, boolean
        // 5. Что такое var? // универсальный тип данных, который определяется автоматически в зависимости от присвоенного значения
        // 6. Сколько байт занимает в памяти переменная типа long? 8 байт
        // 7. Что такое явное приведение типов? приведение одного типа данных к другому при условии, что диапазон целевого типа меньше, чем исходного
        // 8. Какой тип данных мы получим в результате сложения short и byte? int
        // 9. Какой тип данных мы получим в результате сложения long и float? float
        long a = 1;
        float b = 2.0F;
        float res = a + b;
        // 10. Как работает оператор && ? Если a и b true, то вернется true (a - false, вернется false)
        // 11. Что такое тело цикла? последовательность инструкций, выполняемых за одну итерацию
        // 12. Что такое итерация цикла? один процесс выполнения инструкций, составляющих тело цикла
        // 13. Каким образом можно прервать выполнение цикла? break
        // 14. Как будет работать следующее ветвление, если значение переменной равно 18 и если значение переменной равно 14?
        // if (age1 >= 18) System.out.println("Вы можете просматривать товары и совершать покупки"); // выводдится в консоль, если 18
        // else if (age1 < 18) System.out.println("Вы можете просматривать товары, но не совершать покупки"); // выводдится в консоль, если 14
        // 15. Для чего программам нужен метод main? точка входа в программу, составляющий класс и обеспечивающий выполнение инструкций и методов в нем

        var x = 100;
        var y = 7l;
        var z = x + y; // 16. какой тип данных переменной z? Long
        System.out.println(z);

        var in01 = new Scanner(System.in); // 17. какой тип данных переменной in01? Scanner

        // 18. в чём причина ошибки? исправьте её
        var code = 0; // при использовании var нужно сразу указывать значение, чтобы автоматически определялся тип переменной
        code = 1;

        // 19. найти и исправить ошибки
        String login = "qwerty";
        String token = "22ffr";
        if (login.equals("qwerty")  && token.equals("22ffr")) {
            System.out.println("Токен и логин указаны верно, Вы вошли в систему");
        }

        // 20. найти и исправить ошибки
        var in02 = new Scanner(System.in);
        System.out.println("Введите возраст");
        int age = in02.nextInt();
        // if (age < 18 && age > 200) {
        if (age < 18 || age > 200) { // используем или
            System.out.println("Вы не можете совершать покупки");
        } else if (age >= 18 || age <= 200) {
            System.out.println("Вы можете совершать покупки");
        }

        // 21. найти и исправить ошибки
        var in03 = new Scanner(System.in);
        System.out.println("Где хранятся строки в Java? Введите один из вариантов: пул строк, куча, хранилище строк.");
        String answer = in03.nextLine();
        switch (answer) {
            case "пул строк":
                System.out.println("Вы ввели верный вариант");
                break; // необходимо добавить break иначе все остальные case также запишутся
            case "куча":
                System.out.println("Вы правы, но лучше уточнить");
                break;
            default:
                System.out.println("Вы ошиблись");
        }

        // 22. найти и исправить ошибку в решении задачи:
        // напечатать числа от 100 до 0, включая 100 и 0
        int start = 100;
        while (start > 0) {
            System.out.println(start--);
        }
        System.out.println(start);

        // 23. сколько раз будут выполнены инструкции из тела цикла? 0 из за условия first > last
        int first = 1, last = 15;
        for (; first > last; first++) {
            System.out.println(first);
        }

        // 24. Ответьте на вопросы:
        // 1. к какому блоку цикла for перейдет программа, когда значение переменной i будет равно 15,
        // к проверке условия или обновлению счётчиков? к проверке условия
        // 2. Сколько раз произойдёт инициализация переменной i? 1
        for (int i = 0; i < 30; i++) {
            if (i == 15) continue;
            System.out.println(i);
        }
    }
}
